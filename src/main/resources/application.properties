spring.application.name=mybungalow

# Server
# Allow Railway (and other hosts) to set the port via the PORT env var.
server.port=${PORT:8080}
# Bind to all interfaces (helpful in container/cloud environments)
server.address=0.0.0.0

# Datasource
# Prefer environment-provided JDBC url (SPRING_DATASOURCE_URL) or Railway's MYSQL_URL / MYSQL_* variables.
# Resolution order:
# 1. SPRING_DATASOURCE_URL
# 2. MYSQL_URL (complete JDBC URL provided by Railway)
# 3. Constructed URL from MYSQLHOST / MYSQLPORT / MYSQLDATABASE (Railway provides MYSQLHOST as RAILWAY_PRIVATE_DOMAIN)
# 4. Local dev fallback
## Datasource URL construction (properties-only approach)
## Resolution order (from highest to lowest priority):
## 1. SPRING_DATASOURCE_URL (explicit, should be a full JDBC URL)
## 2. railway.jdbc.url (constructed below: jdbc:${MYSQL_PUBLIC_URL} or jdbc:${MYSQL_URL} or constructed host/port/db)
## 3. H2 in-memory fallback for local dev

## Construct a JDBC URL from Railway-provided env vars. This prefixes `jdbc:` so
## Railway's mysql:// values become valid JDBC URLs (e.g. jdbc:mysql://...).
railway.jdbc.url=jdbc:${MYSQL_PUBLIC_URL:${MYSQL_URL:jdbc:mysql://${MYSQLHOST:${RAILWAY_PRIVATE_DOMAIN:127.0.0.1}}:${MYSQLPORT:3306}/${MYSQL_DATABASE:${MYSQLDATABASE:hotel_db}}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}}

spring.datasource.url=${SPRING_DATASOURCE_URL:${railway.jdbc.url:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=MySQL}}

# Username: prefer SPRING_DATASOURCE_USERNAME, then MYSQLUSER, then default to 'root'
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${MYSQLUSER:root}}

# Password: prefer SPRING_DATASOURCE_PASSWORD, then MYSQLPASSWORD, then MYSQL_ROOT_PASSWORD, then empty
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${MYSQLPASSWORD:${MYSQL_ROOT_PASSWORD:}}}

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Logging
logging.level.com.backend.mybungalow=DEBUG
logging.level.org.springframework.web=DEBUG

## CORS allowed origin for dev
app.cors.allowed-origin=*

# JWT Configuration
# Read secret from environment in production (JWT_SECRET). Keep a default for local dev only.
jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890}
jwt.expiration=${JWT_EXPIRATION_MS:86400000}


